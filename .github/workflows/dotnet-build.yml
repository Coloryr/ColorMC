name: ColorMC构建

on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:    
      - 'releases/**'
      - 'master'
    # Sequence of patterns matched against refs/tags
    tags:        
      - '*'

jobs:
  # build-ubuntu:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: 设置.NET Core
  #     uses: actions/setup-dotnet@v4
  #     with:
  #       dotnet-version: 8.0.100

  #   - name: Read version number
  #     id: version
  #     run: |
  #       VERSION=$(cat ./build/version)
  #       echo "VERSION=$VERSION" >> $GITHUB_ENV  

  #   - name: 更新源码
  #     shell: bash
  #     working-directory: ./
  #     run: |
  #       chmod a+x ./build/update.sh
  #       ./build/update.sh

  #   - name: 构建
  #     shell: bash
  #     working-directory: ./
  #     run: |
  #       chmod a+x ./build/build-ubuntu.sh
  #       ./build/build-ubuntu.sh

  #   - name: 上传
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: "colormc-ubuntu-x64"
  #       path: build_out/colormc-a${{ env.VERSION }}-linux-x64.deb

  #   - name: 上传
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: "colormc-ubuntu-arm64"
  #       path: build_out/colormc-a${{ env.VERSION }}-linux-arm64.deb

  #   - name: 上传
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: "colormc-ubuntu-x64-aot"
  #       path: build_out/colormc-a${{ env.VERSION }}-linux-x64-aot.deb

  #   - name: 上传
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: "colormc-ubuntu-arm64-aot"
  #       path: build_out/colormc-a${{ env.VERSION }}-linux-arm64-aot.deb
    
  #   - name: 上传
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: "colormc-ubuntu-x64-appimage"
  #       path: build_out/colormc-a${{ env.VERSION }}-x86_64.AppImage

  # build-macos:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: 设置.NET Core
  #     uses: actions/setup-dotnet@v4
  #     with:
  #       dotnet-version: 8.0.100

  #   - name: 更新源码
  #     shell: bash
  #     working-directory: ./
  #     run: |
  #       chmod a+x ./build/update.sh
  #       ./build/update.sh

  #   - name: 构建
  #     shell: bash
  #     working-directory: ./
  #     run: |
  #       chmod a+x ./build/build-macos.sh
  #       ./build/build-macos.sh

  #   - name: 上传 ZIP
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: "colormc-macos-x64"
  #       path: build_out/

  # build-windows:
  #   runs-on: windows-latest
  #   steps:
  #   - uses: actions/checkout@v3

  #   - name: Read version number
  #     id: version
  #     run: |
  #       $version = Get-Content ./build/version
  #       echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

  #   - name: 设置.NET Core
  #     uses: actions/setup-dotnet@v4
  #     with:
  #       dotnet-version: 8.0.100

  #   - name: 更新源码
  #     shell: cmd
  #     working-directory: ./
  #     run: ./build/update.cmd

  #   - name: 构建
  #     shell: cmd
  #     working-directory: ./
  #     run: ./build/build-windows.cmd

  #   - name: 上传
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: "colormc-windows-x64"
  #       path: build_out/colormc-a${{ env.VERSION }}-win-x64.zip

  #   - name: 上传
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: "colormc-windows-arm64"
  #       path: build_out/colormc-a${{ env.VERSION }}-win-arm64.zip

  #   - name: 上传
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: "colormc-windows-x64-aot"
  #       path: build_out/colormc-a${{ env.VERSION }}-win-x64-aot.zip

  #   - name: 上传
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: "colormc-windows-arm64-aot"
  #       path: build_out/colormc-a${{ env.VERSION }}-win-arm64-aot.zip

  build-arch:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Read version number
      id: version
      run: |
        VERSION=$(cat ./build/version)
        echo "VERSION=$VERSION" >> $GITHUB_ENV  

    - name: 设置.NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.100

    - name: 更新源码
      shell: bash
      working-directory: ./
      run: |
        chmod a+x ./build/update.sh
        ./build/update.sh

    - name: 初始化
      run: |
        pacman -Syu --noconfirm base-devel git
        # pacman -Sy --noconfirm dotnet-sdk-8.0
        useradd -m builder
        echo 'builder ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/builder

    - name: 构建
      run: |
        chmod a+x ./build/build-arch.sh
        ./build/build-arch.sh

    - name: 上传
      uses: actions/upload-artifact@v4
      with:
        name: "colormc-arch-x86"
        path: build_out/colormc-a${{ env.VERSION }}-a${{ env.VERSION }}-x86_64.pkg.tar.zst

    - name: 上传
      uses: actions/upload-artifact@v4
      with:
        name: "colormc-arch-x86-aot"
        path: build_out/colormc-a${{ env.VERSION }}-aot-a${{ env.VERSION }}-aot-x86_64.pkg.tar.zst